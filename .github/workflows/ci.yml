name: "CI"

on:
  push:
  pull_request:
    # We don't run on PR synchronize, because that would duplicate the push-Build
    types:
      - opened

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pytest
        # For some reason, pytest on GitHub actions defaults to /home/runner/work instead of the working directory
        # /home/runner/work/questionpy-server/questionpy-server, where the repo is cloned.
        run: pytest --rootdir=. -c pyproject.toml --cov-report xml --md pytest-report.md

      - name: Generate coverage report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage.xml
          badge: true
          format: markdown
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Append coverage report
        run: |
          printf "\n## Coverage Report\n\n" >> pytest-report.md
          cat code-coverage-results.md >> pytest-report.md

      - name: Create job summary
        if: always()
        run: cat pytest-report.md > "$GITHUB_STEP_SUMMARY"

      - uses: jwalton/gh-find-current-pr@v1
        if: always()
        id: find_pr

      - name: Comment on open PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: always() && steps.find_pr.outputs.number
        with:
          number: ${{ steps.find_pr.outputs.number }}
          path: pytest-report.md

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pylint
        run: pylint questionpy tests

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run mypy
        run: mypy questionpy tests

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run flake8
        run: flake8 questionpy tests
