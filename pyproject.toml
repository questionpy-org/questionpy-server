[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "questionpy-common"
description = "Common classes and functions for QuestionPy"
authors = ["innoCampus <info@isis.tu-berlin.de>"]
homepage = "https://questionpy.org"
version = "0.2.0"

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.10.6"
pydantic-factories = "^1.17.2"

[tool.poetry.dev-dependencies]
pylint = "^2.17.0"
pytest = "^7.2.2"
pytest-md = "^0.2.0"
pylint-pytest = "^1.1.2"
mypy = "^1.1.1"
flake8 = "^6.0.0"
coverage = { extras = ["toml"], version = "^7.2.1" }
tox = "^4.4.6"
tox-gh-actions = "^3.0.0"


[tool.pytest.ini_options]
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"


# This section is read automatically by Coverage.py when its working directory is .
# https://coverage.readthedocs.io/en/6.5.0/config.html#configuration-reference
[tool.coverage.run]
branch = true
source = ["questionpy_common"]

[tool.pylint]

[tool.pylint.MAIN]
extension-pkg-allow-list = "pydantic"
# pylint_pytest removes some false positives when checking tests
load-plugins = "pylint_pytest"
fail-on = ["E", "F"]
fail-under = 8

[tool.pylint.BASIC]
# Allow these well-known names despite usual naming conventions
good-names = ["i", "j", "k", "e", "ex", "_"]
# Allow any name for test methods
function-rgx = "^test_.+|[a-z0-9_]+$"

[tool.pylint.CLASSES]
valid-metaclass-classmethod-first-arg = "mcs"

[tool.pylint.DESIGN]
max-attributes = 15
max-branches = 15

[tool.pylint.REPORTS]
output-format = "colorized"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-module-docstring", "missing-class-docstring", "missing-function-docstring",
    "unused-wildcard-import", "too-few-public-methods",
]
enable = ""

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"
indent-after-paren = 4
indent-string = "    "
max-line-length = 120

[tool.pylint.IMPORTS]
allow-wildcard-with-all = true

[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_defs = true
strict_optional = true
show_error_codes = true


[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
    py{39,310,311}-pytest
    pylint
    flake8
    mypy

minversion = 4.2.6

[gh-actions]
# Associates python versions installed in GitHub Actions (left) with one or more factors (right)
python =
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
allowlist_externals = poetry
# tox already installs the package (und thus its main dependencies) for us, so we only install dev dependencies here.
commands_pre =
    poetry install --no-root --without main
commands =
    coverage run -m pytest {tty:--color=yes} tests {posargs}

[testenv:pylint]
commands =
    pylint questionpy_common tests

[testenv:flake8]
commands =
    flake8 questionpy_common tests

[testenv:mypy]
commands =
    mypy questionpy_common tests
"""
