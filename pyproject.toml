[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "questionpy-server"
description = "QuestionPy application server"
authors = ["innoCampus <info@isis.tu-berlin.de>"]
homepage = "https://questionpy.org"
version = "0.1.0"

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.8.1"
pydantic = "^1.9.1"

[tool.poetry.dev-dependencies]
pylint = "^2.14.5"
pytest = "^7.1.2"
pytest-aiohttp = "^1.0.4"
pytest-md = "^0.2.0"
pytest-cov = "^3.0.0"
pylint-pytest = "^1.1.2"
mypy = "^0.971"
flake8 = "^4.0.1"

[tool.pytest.ini_options]
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"
addopts = "--cov --cov-config=pyproject.toml --cov-branch --cov-report term:skip-covered"


[tool.coverage.run]
branch = true
source = ["questionpy_server"]


[tool.pylint]

[tool.pylint.MAIN]

extension-pkg-allow-list = "pydantic"
# pylint_pytest removes some false positives when checking tests
load-plugins = "pylint_pytest"

fail-on = ["E", "F"]
fail-under = 8

[tool.pylint.BASIC]
# Allow these well-known names despite usual naming conventions
good-names = ["i", "j", "k", "e", "ex", "_"]

[tool.pylint.REPORTS]
output-format = "colorized"

[tool.pylint."MESSAGES CONTROL"]
disable = ["missing-module-docstring", "missing-class-docstring", "missing-function-docstring"]
enable = ""

[tool.pylint.FORMAT]

expected-line-ending-format = "LF"
indent-after-paren = 4
indent-string = "    "
max-line-length = 120


[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_defs = true
strict_optional = true
show_error_codes = true
