[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "questionpy-server"
description = "QuestionPy application server"
authors = ["Technische Universit√§t Berlin, innoCampus <info@isis.tu-berlin.de>"]
license = "MIT"
homepage = "https://questionpy.org"
version = "0.1.1"

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.8.1"
# 2.6.0 breaks us because of <https://github.com/pydantic/pydantic/issues/8697>.
pydantic = "^2.4, !=2.6.0"
questionpy-common = { git = "https://github.com/questionpy-org/questionpy-common.git", rev = "fcaad57b2165ba3e6cd6bcd554cf410473f88818" }
polyfactory = "^2.7.2"
pydantic-settings = "^2.0.2"
watchdog = "^3.0.0"
semver = "^3.0.0"
psutil = "^5.9.4"
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
types-psutil = "^5.9.5.6"
tox = "^4.13.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-aiohttp = "^1.0.4"
pytest-md = "^0.2.0"
coverage = { extras = ["toml"], version = "^7.2.1" }

[tool.poetry.group.linter]
dependencies = { ruff = "^0.2.2" }
optional = true

[tool.poetry.group.type-checker]
dependencies = { mypy = "^1.1.1" }
optional = true

[tool.ruff]
extend = "ruff_defaults.toml"

[tool.pytest.ini_options]
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"

# This section is read automatically by Coverage.py when its working directory is .
# https://coverage.readthedocs.io/en/6.5.0/config.html#configuration-reference
[tool.coverage.run]
branch = true
source = ["questionpy_server"]

[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_defs = true
strict_optional = true
show_error_codes = true


[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
    py{39,310,311}-pytest
    pylint
    flake8
    mypy

minversion = 4.2.6

[testenv]
allowlist_externals = poetry
# tox already installs the package (und thus its main dependencies) for us, so we only install dev dependencies here.
commands_pre =
    poetry install --no-root --without main
commands =
    coverage run -m pytest {tty:--color=yes} tests {posargs}

[testenv:pylint]
commands =
    pylint questionpy_server tests

[testenv:flake8]
commands =
    flake8 questionpy_server tests

[testenv:mypy]
commands =
    mypy questionpy_server tests
"""
